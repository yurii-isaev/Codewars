-- CROSS JOIN – объединение SQL по которым каждая строка одной таблицы объединяется с каждой строкой другой таблицы.
CREATE TABLE Clients
(
    [ID_client] INT PRIMARY KEY,
    [LastName]  NVARCHAR(50)
)

INSERT INTO Clients
VALUES (1, 'Ivanov'), (2, 'Petrov'), (3, 'Sidorov'), (4, 'Kozlov')
GO
+------------+----------+
| ID_client  | LastName |
+------------+----------+
|     1      | Ivanov   |
|     2      | Petrov   |
|     3      | Sidorov  |
|     4      | Kozlov   |
+------------+----------+

CREATE TABLE Orders
(
    [ID_order]  INT PRIMARY KEY,
    [ID_client] INT,
    [Sum]       MONEY,
    [OrderDate] DATE
)

INSERT INTO Orders
VALUES (1, 4, 250, '20160308'),
       (2, 10, 120, '20160629'),
       (3, 4, 73, '20160812'),
       (4, 2, 340, '20161231'),
       (5, 4, 220, '20161231')
GO
+-----------+-----------+-------------+-------------+
| ID_order  | ID_client |    Sum      | OrderDate   |
+-----------+-----------+-------------+-------------+
|     1     |      4    |     250     |  2016-03-08 |
|     2     |     10    |     120     |  2016-06-29 |
|     3     |      4    |      73     |  2016-08-12 |
|     4     |      2    |     340     |  2016-12-31 |
|     5     |      4    |     220     |  2016-12-31 |
+-----------+-----------+-------------+-------------+

-- Перекрестное объедтнение таблиц.
SELECT *
FROM Clients AS C
    CROSS JOIN Orders AS O
GO
-- 20
+------------+-----------+-------------+-------------+----------+------------+
|C.ID_client | LastName  |  ID_order   | O.ID_client |    Sum   | OrderDate  |
+------------+-----------+-------------+-------------+----------+------------+
|     1      |  Ivanov   |      1      |       4     |   250    | 2016-03-08 |
|     1      |  Ivanov   |      2      |      10     |   120    | 2016-06-29 |
|     1      |  Ivanov   |      3      |       4     |    73    | 2016-08-12 |
|     1      |  Ivanov   |      4      |       2     |   340    | 2016-12-31 |
|     1      |  Ivanov   |      5      |       4     |   220    | 2016-12-31 |
+------------+-----------+-------------+-------------+----------+------------+
|     2      |  Petrov   |      1      |       4     |   250    | 2016-03-08 |
|     2      |  Petrov   |      2      |      10     |   120    | 2016-06-29 |
|     2      |  Petrov   |      3      |       4     |    73    | 2016-08-12 |
|     2      |  Petrov   |      4      |       2     |   340    | 2016-12-31 |
|     2      |  Petrov   |      5      |       4     |   220    | 2016-12-31 |
+------------+-----------+-------------+-------------+----------+------------+
|     3      |  Sidorov  |      1      |       4     |   250    | 2016-03-08 |
|     3      |  Sidorov  |      2      |      10     |   120    | 2016-06-29 |
|     3      |  Sidorov  |      3      |       4     |    73    | 2016-08-12 |
|     3      |  Sidorov  |      4      |       2     |   340    | 2016-12-31 |
|     3      |  Sidorov  |      5      |       4     |   220    | 2016-12-31 |
+------------+-----------+-------------+-------------+----------+------------+
|     4      |  Kozlov   |      1      |       4     |   250    | 2016-03-08 |
|     4      |  Kozlov   |      2      |      10     |   120    | 2016-06-29 |
|     4      |  Kozlov   |      3      |       4     |    73    | 2016-08-12 |
|     4      |  Kozlov   |      4      |       2     |   340    | 2016-12-31 |
|     4      |  Kozlov   |      5      |       4     |   220    | 2016-12-31 |
+------------+-----------+-------------+-------------+----------+------------+

-- Внутреннее объединение таблиц.
-- Указывает на то, что возвращаются все совпадающие пары строк.
SELECT *
FROM Clients AS C
    INNER JOIN Orders AS O
        ON C.ID_client = O.ID_client
GO
-- 4
+-------------+----------+------------+-------------+-----------+------------+
| C.ID_client | LastName |  ID_order  | O.ID_client |   Sum     | OrderDate  |
+-------------+----------+------------+-------------+-----------+------------+
|     2       |  Ivanov  |     4      |      2      |    340    | 2016-12-31 |
|     4       |  Kozlov  |     1      |      4      |    250    | 2016-03-08 |
|     4       |  Kozlov  |     3      |      4      |     73    | 2016-08-12 |
|     4       |  Kozlov  |     5      |      4      |    220    | 2016-12-31 |
+-------------+----------+------------+-------------+-----------+------------+

-- Внешнее левое объединение таблиц.
-- Левая часть ориентируется на таблицу Клиентов.
SELECT *
FROM Clients AS C
    LEFT OUTER JOIN Orders AS O
        ON C.ID_client = O.ID_client
GO
-- 6
+-------------+----------+------------+-------------+-----------+-------------+
| C.ID_client | LastName  |  ID_order | O.ID_client |   Sum     | OrderDate   |
+-------------+----------+------------+-------------+-----------+-------------+
|     1       |  Ivanov   |    null   |     null    |   null    |    null     |
|     2       |  Petrov   |     4     |       2     |   340     | 2016-12-31  |
|     3       |  Sidorov  |    null   |     null    |   null    |    null     |
|     4       |  Kozlov   |     1     |       4     |   250     | 2016-03-08  |
|     4       |  Kozlov   |     3     |       4     |    73     | 2016-08-12  |
|     4       |  Kozlov   |     5     |       4     |   220     | 2016-12-31  |
+-------------+----------+------------+-------------+-----------+-------------+
-- Внешнее правое объединение таблиц.
SELECT *
FROM Clients AS C
    RIGHT OUTER JOIN Orders AS O
        ON C.ID_client = O.ID_client
GO
-- 5
+--------------+----------+------------+-------------+----------+-------------+
| C.ID_client  | LastName |  ID_order  | O.ID_client |   Sum    | OrderDate   |
+--------------+----------+------------+-------------+----------+-------------+
|      4       |  Kozlov  |     1      |       4     |   250    | 2016-03-08  |
|     null     |   null   |     2      |      10     |   120    | 2016-06-29  |
|      4       |  Kozlov  |     3      |       4     |    73    | 2016-08-12  |
|      2       |  Petrov  |     4      |       2     |   340    | 2016-12-31  |
|      4       |  Kozlov  |     5      |       4     |   220    | 2016-12-31  |
+--------------+----------+------------+-------------+----------+-------------+

-- Внешнее полное объединение таблиц.
-- Сохраняет строки двух таблиц.
SELECT *
FROM Clients AS C
    FULL OUTER JOIN Orders AS O
        ON C.ID_client = O.ID_client
GO
-- 7
+-------------+----------+------------+-------------+-----------+-------------+
| C.ID_client | LastName |  ID_order  | O.ID_client |   Sum     | OrderDate   |
+-------------+----------+------------+-------------+-----------+-------------+
|     1       |  Ivanov   |   null    |    null     |    null   |    null     |
|     2       |  Petrov   |    4      |      2      |    340    | 2016-12-31  |
|     3       |  Sidorov  |   null    |    null     |    null   |    null     |
|     4       |  Kozlov   |    1      |      4      |    250    | 2016-03-08  |
|     4       |  Kozlov   |    3      |      4      |     73    | 2016-08-12  |
|     4       |  Kozlov   |    5      |      4      |    220    | 2016-12-31  |
|    null     |   null    |    2      |     10      |    120    | 2016-06-29  |
+-------------+-----------+-----------+-------------+-----------+-------------+


USE AdventureWorks2014;

-- Декартово произведение — В SQL возникает или при отсутствии фразы для отбора WHERE вообще или же при отсутствии
-- во фразе WHERE сравнения полей строк таблиц друг с другом.
SELECT *
FROM Purchasing.Vendor
    CROSS JOIN Purchasing.ProductVendor
GO

-- При добавлении к запросу CROSS JOIN предложения WHERE, получим внутреннее соединение INNER JOIN
SELECT *
FROM Purchasing.Vendor
    CROSS JOIN Purchasing.ProductVendor
WHERE Vendor.BusinessEntityID = ProductVendor.BusinessEntityID
GO
-- 460

-- Использование псевдонимов таблиц
SELECT *
FROM Purchasing.Vendor AS V
    CROSS JOIN Purchasing.ProductVendor AS PV
WHERE V.BusinessEntityID = PV.BusinessEntityID
GO
-- 460