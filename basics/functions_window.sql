/*
Оконные функции агрегирования представляют собой то же, что и агрегатные функции группировки,
но вместо применения к группам в групповых запросах они применяются к окнам,
определяемых в предложении OVER. Функция агрегирования должна применяться к наборам строк,
и ее не должно интересовать, какой механизм языка применен для определения набора.
 */

USE test;

CREATE TABLE Order_s
(
    [Code]     INT IDENTITY,
    [Date]     DATE,
    [Product]  NVARCHAR(50),
    [Quantity] INT,
    [Price]    MONEY,
    [Сost]     AS Price * Quantity
)
INSERT Order_s(Date, Product, Quantity, Price)
VALUES ('20160101', 'First', 5, 1),
       ('20160101', 'Second', 5, 1),
       ('20160102', 'Third', 2, 2),
       ('20160102', 'Fourth', 1, 2),
       ('20160103', 'Fourth', 4, 3),
       ('20160201', 'Third', 2, 4),
       ('20160202', 'Second', 7, 5),
       ('20160203', 'Fourth', 3, 6),
       ('20160301', 'Fourth', 1, 7),
       ('20160302', 'Third', 5, 8),
       ('20160303', 'Fourth', 2, 9),
       ('20170101', 'First', 1, 1),
       ('20170102', 'Third', 3, 4),
       ('20170103', 'Fourth', 5, 6),
       ('20170201', 'Second', 2, 9),
       ('20170202', 'Fourth', 3, 16),
       ('20170203', 'First', 4, 25),
       ('20170101', 'Fourth', 1, 36),
       ('20170102', 'Fourth', 5, 49),
       ('20170303', 'First', 1, 64)
GO

-- Запрос с применением предложения OVER.
SELECT *,
       SUM(Сost) OVER () AS result_all_time
FROM Order_s
GO
+----------+-------------+----------+------------+-------------+------------+-------------------+
|   code   |  Date       | Product  |  Quantity  |    price    |   Coat     |    result_all     |
+----------+-------------+----------+------------+-------------+------------+-------------------+
|    1     | 2016-01-01  | First    |     5      |    1.0000   |    5.0000  |      28.0000      |
|    2     | 2016-01-01  | Second   |     5      |    1.0000   |    5.0000  |      28.0000      |
|    3     | 2016-01-02  | Third    |     2      |    2.0000   |    4.0000  |      28.0000      |
|    4     | 2017-01-01  | Fourth   |     1      |    2.0000   |    2.0000  |      28.0000      |
|    5     | 2017-01-02  | Fourth   |     4      |    3.0000   |   12.0000  |      28.0000      |
+----------+-------------+----------+------------+-------------+------------+-------------------+

-- Секционирование по дате.
SELECT *,
       SUM(Сost) OVER (PARTITION BY YEAR(Date)) AS result_for_year
FROM Order_s
GO
+----------+-------------+----------+------------+-------------+------------+-------------------+
|   code   |  Date       | Product  |  Quantity  |    price    |   Coat     |  result_for_year  |
+----------+-------------+----------+------------+-------------+------------+-------------------+
|    1     | 2016-01-01  | First    |     5      |    1.0000   |    5.0000  |      14.0000      |
|    2     | 2016-01-01  | Second   |     5      |    1.0000   |    5.0000  |      14.0000      |
|    3     | 2016-01-02  | Third    |     2      |    2.0000   |    4.0000  |      14.0000      |
|    4     | 2017-01-01  | Fourth   |     1      |    2.0000   |    2.0000  |      10.0000      |
|    5     | 2017-01-02  | Fourth   |     4      |    2.0000   |    8.0000  |      10.0000      |
+----------+-------------+----------+------------+-------------+------------+-------------------+

-- Секционирование по году и месяцу.
SELECT *,
       SUM(Сost) OVER (PARTITION BY YEAR(Date), MONTH(Date)) AS result_for_month
FROM Order_s
GO
+----------+-------------+----------+------------+-------------+------------+-------------------+
|   code   |  Date       | Product  |  Quantity  |    price    |   Coat     |  result_for_month |
+----------+-------------+----------+------------+-------------+------------+-------------------+
|    1     | 2016-01-01  | First    |     5      |    1.0000   |    5.0000  |      14.0000      |
|    2     | 2016-01-01  | Second   |     5      |    1.0000   |    5.0000  |      14.0000      |
|    3     | 2016-01-02  | Third    |     2      |    2.0000   |    4.0000  |      14.0000      |
|    4     | 2017-01-01  | Fourth   |     1      |    2.0000   |    2.0000  |      10.0000      |
|    5     | 2017-01-02  | Fourth   |     4      |    2.0000   |    8.0000  |      10.0000      |
+----------+-------------+----------+------------+-------------+------------+-------------------+

-- Запрос на изменение данных в поле Quantity в таблице Order_s
UPDATE Order_s
SET Quantity = 3
WHERE Code = 2
GO

-- Запрос с использованием разных условий секционирования.
SELECT *,
       SUM(Сost) OVER (PARTITION BY YEAR(Date), MONTH(Date)) AS result_for_month,
       SUM(Сost) OVER (PARTITION BY YEAR(Date))              AS result_for_year,
       SUM(Сost) OVER (PARTITION BY YEAR(Date), MONTH(Date)) /
       SUM(Сost) OVER (PARTITION BY YEAR(Date))              AS '%, result_for_month_of_year',
       SUM(Сost) OVER ()                                     AS result_for_all
FROM Order_s
GO
+------+------------+----------+------------+-----------+-----------+--------------+-------------+-----+--------------+
| code |  Date      | Product  |  Quantity  |   price   |   Coat    | result_month | result_year |  %  |  result_all  |
+------+------------+----------+------------+-----------+-----------+--------------+-------------+-----+--------------+
|   1  | 2016-01-01 | First    |     5      |   1.0000  |   5.0000  |    8.0000    |    12.000   | 0.6 |    22.000    |
|   2  | 2016-01-01 | Second   |     3      |   1.0000  |   3.0000  |    8.0000    |    12.000   | 0.6 |    22.000    |
|   3  | 2016-02-01 | Third    |     2      |   2.0000  |   4.0000  |    4.0000    |    12.000   | 0.6 |    22.000    |
|   4  | 2017-01-01 | Fourth   |     1      |   2.0000  |   2.0000  |   10.0000    |    10.000   |  1  |    22.000    |
|   5  | 2017-01-02 | Fourth   |     4      |   2.0000  |   8.0000  |   10.0000    |    10.000   |  1  |    22.000    |
+------+------------+----------+------------+-----------+-----------+--------------+-------------+-----+--------------+
